<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.antifake.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.antifake.model.User" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="telphone" property="telphone" jdbcType="VARCHAR" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="real_status" property="realStatus" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <collection property="userKeyList" ofType="com.antifake.model.PubKey" column="id">
    	<id column="keyId" property="id"/>
    	<result column="uId" property="UserId"/>
    	<result column="pKey" property="publicKey"/>
    </collection>
    <collection property="roleList" ofType="com.antifake.model.Role" column="roleId">
    	<id column="roleId" property="roleId"/>
    	<result column="roleName" property="roleName"/>
    	<result column="description" property="description"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, username, password, nickname, telphone, id_card, realname, sex, real_status, 
    status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from account_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from account_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.antifake.model.User" >
    insert into account_user (user_id, username, password, 
      nickname, telphone, id_card, 
      realname, sex, real_status, 
      status)
    values (#{userId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{telphone,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{realStatus,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.antifake.model.User" >
    insert into account_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="telphone != null" >
        telphone,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="realStatus != null" >
        real_status,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null" >
        #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="realStatus != null" >
        #{realStatus,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.antifake.model.User" >
    update account_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null" >
        telphone = #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null" >
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="realStatus != null" >
        real_status = #{realStatus,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.antifake.model.User" >
    update account_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      telphone = #{telphone,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      real_status = #{realStatus,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  
  <select id="queryUserByUsernameOrTelphone" parameterType="com.antifake.model.User" resultMap="BaseResultMap">
	  	SELECT
		u.user_id,
		u.username,
		u.telphone,
		u.nickname,
		u. PASSWORD,
		u. STATUS,
		r.role_id as roleId,
		r.role_name as roleName,
		r.description as description
		FROM
			account_user u
		LEFT JOIN account_user_role ur ON u.user_id = ur.user_id
		LEFT JOIN account_role r ON ur.role_id = r.role_id
  	<where>
  		<if test="user.username != null">
  			or u.username = #{user.username}
  		</if>
  		<if test="user.telphone != null">
  			or u.telphone = #{user.telphone}
  		</if>
  	</where>
  </select>
  <insert id="saveUserRole"	parameterType="com.antifake.model.Company">
  	insert into account_user_role (user_id,role_id) values (#{userId},#{roleId})
  </insert>
  <select id="queryUserRole" resultType="integer">
  	select count(id) from account_user_role where user_id = #{userId} and role_id=#{roleId}
  </select>
  
</mapper>